{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Player.js"],"names":["cc","Class","extends","Component","properties","maxMoveSpeed","accel","onKeyDown","event","keyCode","macro","KEY","a","left","accLeft","node","runAction","flipX","d","right","accRight","w","up","accUp","s","down","accDown","onKeyUp","onLoad","enabled","xSpeed","ySpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","startMoveAt","pos","setPosition","stopMove","stopAllActions","update","dt","Math","max","min","abs","x","y"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,sBAAc,CAFN;AAGR;AACAC,eAAO;AAJC,KAHP;;AAULC,aAVK,qBAUMC,KAVN,EAUa;AACd;AACA,gBAAOA,MAAMC,OAAb;AACI,iBAAKT,GAAGU,KAAH,CAASC,GAAT,CAAaC,CAAlB;AACA,iBAAKZ,GAAGU,KAAH,CAASC,GAAT,CAAaE,IAAlB;AACI,qBAAKC,OAAL,GAAe,IAAf;AACA;AACA,qBAAKC,IAAL,CAAUC,SAAV,CAAoBhB,GAAGiB,KAAH,CAAS,IAAT,CAApB;AACA;AACJ,iBAAKjB,GAAGU,KAAH,CAASC,GAAT,CAAaO,CAAlB;AACA,iBAAKlB,GAAGU,KAAH,CAASC,GAAT,CAAaQ,KAAlB;AACI,qBAAKC,QAAL,GAAgB,IAAhB;AACA;AACA,qBAAKL,IAAL,CAAUC,SAAV,CAAoBhB,GAAGiB,KAAH,CAAS,KAAT,CAApB;AACA;AACJ,iBAAKjB,GAAGU,KAAH,CAASC,GAAT,CAAaU,CAAlB;AACA,iBAAKrB,GAAGU,KAAH,CAASC,GAAT,CAAaW,EAAlB;AACI,qBAAKC,KAAL,GAAa,IAAb;AACA;AACJ,iBAAKvB,GAAGU,KAAH,CAASC,GAAT,CAAaa,CAAlB;AACA,iBAAKxB,GAAGU,KAAH,CAASC,GAAT,CAAac,IAAlB;AACI,qBAAKC,OAAL,GAAe,IAAf;AACA;AApBR;AAsBH,KAlCI;AAoCLC,WApCK,mBAoCInB,KApCJ,EAoCW;AACZ;AACA,gBAAOA,MAAMC,OAAb;AACI,iBAAKT,GAAGU,KAAH,CAASC,GAAT,CAAaC,CAAlB;AACA,iBAAKZ,GAAGU,KAAH,CAASC,GAAT,CAAaE,IAAlB;AACI,qBAAKC,OAAL,GAAe,KAAf;AACA;AACJ,iBAAKd,GAAGU,KAAH,CAASC,GAAT,CAAaO,CAAlB;AACA,iBAAKlB,GAAGU,KAAH,CAASC,GAAT,CAAaQ,KAAlB;AACI,qBAAKC,QAAL,GAAgB,KAAhB;AACA;AACJ,iBAAKpB,GAAGU,KAAH,CAASC,GAAT,CAAaU,CAAlB;AACA,iBAAKrB,GAAGU,KAAH,CAASC,GAAT,CAAaW,EAAlB;AACI,qBAAKC,KAAL,GAAa,KAAb;AACA;AACJ,iBAAKvB,GAAGU,KAAH,CAASC,GAAT,CAAaa,CAAlB;AACA,iBAAKxB,GAAGU,KAAH,CAASC,GAAT,CAAac,IAAlB;AACI,qBAAKC,OAAL,GAAe,KAAf;AACA;AAhBR;AAkBH,KAxDI;;;AA0DL;;AAEAE,UA5DK,oBA4DK;AACN,aAAKC,OAAL,GAAe,KAAf;AACA;AACA,aAAKf,OAAL,GAAe,KAAf;AACA,aAAKM,QAAL,GAAgB,KAAhB;AACA,aAAKG,KAAL,GAAa,KAAb;AACA,aAAKG,OAAL,GAAe,KAAf;AACA;AACA,aAAKI,MAAL,GAAc,CAAd;AACA;AACA,aAAKC,MAAL,GAAc,CAAd;;AAEA;AACA/B,WAAGgC,WAAH,CAAeC,EAAf,CAAkBjC,GAAGkC,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,KAAK7B,SAA1D,EAAqE,IAArE;AACAP,WAAGgC,WAAH,CAAeC,EAAf,CAAkBjC,GAAGkC,WAAH,CAAeC,SAAf,CAAyBE,MAA3C,EAAmD,KAAKV,OAAxD,EAAiE,IAAjE;AACH,KA3EI;AA6ELW,aA7EK,uBA6EQ;AACT;AACAtC,WAAGgC,WAAH,CAAeO,GAAf,CAAmBvC,GAAGkC,WAAH,CAAeC,SAAf,CAAyBC,QAA5C,EAAsD,KAAK7B,SAA3D,EAAsE,IAAtE;AACAP,WAAGgC,WAAH,CAAeO,GAAf,CAAmBvC,GAAGkC,WAAH,CAAeC,SAAf,CAAyBE,MAA5C,EAAoD,KAAKV,OAAzD,EAAkE,IAAlE;AACH,KAjFI;;;AAmFLa,iBAAa,qBAAUC,GAAV,EAAe;AACxB,aAAKZ,OAAL,GAAe,IAAf;AACA,aAAKC,MAAL,GAAc,CAAd;AACA,aAAKC,MAAL,GAAc,CAAd;AACA,aAAKhB,IAAL,CAAU2B,WAAV,CAAsBD,GAAtB;AACH,KAxFI;;AA0FLE,cAAU,oBAAY;AAClB,aAAK5B,IAAL,CAAU6B,cAAV;AACH,KA5FI;;AA8FLC,UA9FK,kBA8FGC,EA9FH,EA8FO;AACR;AACA,YAAI,KAAKhC,OAAT,EAAkB;AACd,iBAAKgB,MAAL,IAAe,KAAKxB,KAAL,GAAawC,EAA5B;AACH,SAFD,MAEO,IAAI,KAAK1B,QAAT,EAAmB;AACtB,iBAAKU,MAAL,IAAe,KAAKxB,KAAL,GAAawC,EAA5B;AACH,SAFM,MAEA,IAAI,KAAKvB,KAAT,EAAgB;AACnB,iBAAKQ,MAAL,IAAe,KAAKzB,KAAL,GAAawC,EAA5B;AACH,SAFM,MAEA,IAAI,KAAKpB,OAAT,EAAkB;AACrB,iBAAKK,MAAL,IAAe,KAAKzB,KAAL,GAAawC,EAA5B;AACH,SAFM,MAEA;AACH;AACA,gBAAI,KAAKhB,MAAL,GAAc,CAAlB,EAAqB;AACjB,qBAAKA,MAAL,GAAeiB,KAAKC,GAAL,CAAS,CAAT,EAAY,KAAKlB,MAAL,GAAc,KAAKxB,KAAL,GAAawC,EAAvC,CAAf;AACH,aAFD,MAEO;AAAE,qBAAKhB,MAAL,GAAeiB,KAAKE,GAAL,CAAS,CAAT,EAAY,KAAKnB,MAAL,GAAc,KAAKxB,KAAL,GAAawC,EAAvC,CAAf;AAA4D;AACrE,gBAAI,KAAKf,MAAL,GAAc,CAAlB,EAAqB;AACjB,qBAAKA,MAAL,GAAegB,KAAKC,GAAL,CAAS,CAAT,EAAY,KAAKjB,MAAL,GAAc,KAAKzB,KAAL,GAAawC,EAAvC,CAAf;AACH,aAFD,MAEO;AAAE,qBAAKf,MAAL,GAAegB,KAAKE,GAAL,CAAS,CAAT,EAAY,KAAKlB,MAAL,GAAc,KAAKzB,KAAL,GAAawC,EAAvC,CAAf;AAA4D;AACxE;AACD;AACA,YAAKC,KAAKG,GAAL,CAAS,KAAKpB,MAAd,IAAwB,KAAKzB,YAAlC,EAAiD;AAC7C;AACA,iBAAKyB,MAAL,GAAc,KAAKzB,YAAL,GAAoB,KAAKyB,MAAzB,GAAkCiB,KAAKG,GAAL,CAAS,KAAKpB,MAAd,CAAhD;AACH;AACD,YAAKiB,KAAKG,GAAL,CAAS,KAAKnB,MAAd,IAAwB,KAAK1B,YAAlC,EAAiD;AAC7C;AACA,iBAAK0B,MAAL,GAAc,KAAK1B,YAAL,GAAoB,KAAK0B,MAAzB,GAAkCgB,KAAKG,GAAL,CAAS,KAAKnB,MAAd,CAAhD;AACH;;AAED;AACA,aAAKhB,IAAL,CAAUoC,CAAV,IAAe,KAAKrB,MAAL,GAAcgB,EAA7B;AACA,aAAK/B,IAAL,CAAUqC,CAAV,IAAe,KAAKrB,MAAL,GAAce,EAA7B;AACH;AA9HI,CAAT","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n    },\n\n    onKeyDown (event) {\n        // set a flag when key pressed\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n            case cc.macro.KEY.left:\n                this.accLeft = true;\n                // 让玩家镜面翻转\n                this.node.runAction(cc.flipX(true));\n                break;\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.accRight = true;\n                // 让玩家恢复镜面方向\n                this.node.runAction(cc.flipX(false));\n                break;\n            case cc.macro.KEY.w:\n            case cc.macro.KEY.up:\n                this.accUp = true;\n                break;\n            case cc.macro.KEY.s:\n            case cc.macro.KEY.down:\n                this.accDown = true;\n                break;\n        }\n    },\n\n    onKeyUp (event) {\n        // unset a flag when key released\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n            case cc.macro.KEY.left:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.accRight = false;\n                break;\n            case cc.macro.KEY.w:\n            case cc.macro.KEY.up:\n                this.accUp = false;\n                break;\n            case cc.macro.KEY.s:\n            case cc.macro.KEY.down:\n                this.accDown = false;\n                break;\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.enabled = false;\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        this.accUp = false;\n        this.accDown = false;\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n        // 主角当前垂直方向速度\n        this.ySpeed = 0;\n\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy () {\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    startMoveAt: function (pos) {\n        this.enabled = true;\n        this.xSpeed = 0;\n        this.ySpeed = 0;\n        this.node.setPosition(pos);\n    },\n\n    stopMove: function () {\n        this.node.stopAllActions();\n    },\n\n    update (dt) {\n        // 根据加速度flag计算速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        } else if (this.accUp) {\n            this.ySpeed += this.accel * dt;\n        } else if (this.accDown) {\n            this.ySpeed -= this.accel * dt;\n        } else {\n            // 如果没有按方向键则逐渐减速\n            if (this.xSpeed > 0) {\n                this.xSpeed = (Math.max(0, this.xSpeed - this.accel * dt))\n            } else { this.xSpeed = (Math.min(0, this.xSpeed + this.accel * dt)) }\n            if (this.ySpeed > 0) {\n                this.ySpeed = (Math.max(0, this.ySpeed - this.accel * dt))\n            } else { this.ySpeed = (Math.min(0, this.ySpeed + this.accel * dt)) }\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n        if ( Math.abs(this.ySpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.ySpeed = this.maxMoveSpeed * this.ySpeed / Math.abs(this.ySpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n        this.node.y += this.ySpeed * dt;\n    },\n});\n"]}